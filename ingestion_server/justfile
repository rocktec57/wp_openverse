set dotenv-load := false

COLOR := "\\033[0;36m"
NO_COLOR := "\\033[0m"

# Show all available recipes
@_default:
    printf "\n{{ COLOR }}# Ingestion server (path: \`ingestion_server/\`)\n"
    printf "=============================================={{ NO_COLOR }}\n"
    just --list --unsorted


# Install dependencies
install *args="--dev":
    pipenv install {{ args }}

######
# Up #
######

# Bring up services specific to the ingestion server profile
up *flags:
    env COMPOSE_PROFILES="ingestion_server" just ../up {{ flags }}

# Wait for all profile services to be up
wait-up: up
    just wait

##########
# Health #
##########

# Check the health of the service
@health host="localhost:50281":
    -curl -s -o /dev/null -w '%{http_code}' 'http://{{ host }}/'

# Wait for the service to be healthy
@wait host="localhost:50281":
    # The just command on the second line is executed in the context of the
    # parent directory and so must be prefixed with `ingestion_server/`.
    just ../_loop \
    '"$(just ingestion_server/health {{ host }})" != "200"' \
    "Waiting for the ingestion-server to be healthy..."

########
# cURL #
########

# Make a cURL POST request to the service with the given data
_curl-post data host="localhost:50281":
    curl \
      -X POST \
      -H 'Content-Type: application/json' \
      -d '{{ data }}' \
      -w "\n" \
      'http://{{ host }}/task'

# Load QA data into QA indices in Elasticsearch
load-test-data model="image":
    just _curl-post '{"model": "{{ model }}", "action": "LOAD_TEST_DATA"}'

# Load sample data into temp table in API and new index in Elasticsearch
ingest-upstream model="image" suffix="init":
    just _curl-post '{"model": "{{ model }}", "action": "INGEST_UPSTREAM", "index_suffix": "{{ suffix }}"}'

# Promote temp table to prod in API and new index to primary in Elasticsearch
promote model="image" suffix="init" alias="image":
    just _curl-post '{"model": "{{ model }}", "action": "PROMOTE", "index_suffix": "{{ suffix }}", "alias": "{{ alias }}"}'

# Delete an index in Elasticsearch
delete model="image" suffix="init" alias="image":
    just _curl-post '{"model": "{{ model }}", "action": "DELETE_INDEX", "index_suffix": "{{ suffix }}"}'

point-alias model suffix alias:
    just _curl-post '{"model": "{{ model }}", "action": "POINT_ALIAS", "index_suffix": "{{ suffix }}", "alias": "{{ alias }}"}'

create-and-populate-filtered-index model="image" destination_suffix="init":
    just _curl-post '{"model": "{{ model }}", "action": "CREATE_AND_POPULATE_FILTERED_INDEX", "destination_index_suffix": "{{ destination_suffix }}"}'

#########
# Tests #
#########

# Run ingestion-server tests locally
test-local *args:
    pipenv run pytest {{ args }}

# Clean integration test docker-compose stack. Useful if test tear down does not run due to catastrophic test failure.
test-clean-dc:
    docker-compose --profile=ingestion_server -f test/integration-docker-compose.yml down -v
