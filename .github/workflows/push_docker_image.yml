name: Publish Docker images on-demand
on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to push (options: "api", "api_nginx", or "ingestion_server")'
        required: true
      commit:
        description: Commit that the image is built from
        required: true

concurrency: ${{ github.workflow }}-${{ inputs.image }}-${{ inputs.commit }}

jobs:
  push:
    name: Publish requested Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine successful run ID
        id: determine-run-id
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
          script: |
            const [owner, repo] = '${{ github.repository }}'.split('/')
            const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              branch: 'main',
              event: 'push',
              status: 'success',
              head_sha: '${{ github.event.inputs.commit }}',
            })
            const runId = runs.workflow_runs.find((run) => run.name === 'CI + CD').id
            core.setOutput('run_id', runId)

      - name: Download image `${{ github.event.inputs.image }}`
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.image }}
          path: /tmp
          github_token: ${{ secrets.ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          run_id: ${{ steps.determine-run-id.outputs.run_id }}

      - name: Load and tag image `${{ github.event.inputs.image }}`
        env:
          INPUT_IMAGE: ${{ github.event.inputs.image }}
        run: |
          docker load --input "/tmp/$INPUT_IMAGE.tar"
          docker tag "openverse-$INPUT_IMAGE" \
            "ghcr.io/wordpress/openverse-$INPUT_IMAGE:${{ github.event.inputs.commit }}"
          docker push --all-tags "ghcr.io/wordpress/openverse-$INPUT_IMAGE"
