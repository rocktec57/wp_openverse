# This file is being synced from WordPress/openverse. Any changes made to it
# here will be overwritten. Please make any necessary edits to these files:
# - https://github.com/WordPress/openverse/blob/main/templates/.pre-commit-config.yaml.jinja
# - https://github.com/WordPress/openverse/blob/main/templates/.pre-commit-config.local.yaml.jinja

exclude: Pipfile\.lock|migrations|\.idea|node_modules|archive|retired

repos:
  - repo: local # More local hooks are defined at the bottom.
    hooks:
      - id: i18n
        name: i18n
        files: ^frontend/.*$
        # Check if the i18n files have been downloaded by checking if the Arabic translation exists
        # Download the i18n files if they do not exist
        entry: bash -c 'if [ ! -f "$(dirname "$dir")"/frontend/src/locales/ar.json ]; then just frontend/run i18n; fi'
        language: system
        pass_filenames: false

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-executables-have-shebangs
      - id: check-json
        exclude: tsconfig.json # contains comments
      - id: check-case-conflict
      - id: check-toml
      - id: check-merge-conflict
      - id: check-xml
      - id: check-yaml
      - id: end-of-file-fixer
        exclude: frontend/test/tapes/.+\.json5
      - id: check-symlinks
      - id: mixed-line-ending
      - id: fix-encoding-pragma
        args:
          - --remove
      - id: check-docstring-first
      - id: requirements-txt-fixer

  # Use the `.isort.cfg` file to configure additional project-specific requirements.
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
        files: \.py$
        exclude: ^build/.*$|^.tox/.*$|^venv/.*$
        args:
          - --profile=black
          - --lines-after-imports=2

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.2.2
    hooks:
      - id: pyupgrade
        args:
          - --py310-plus

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: "v0.0.257"
    hooks:
      - id: ruff

  - repo: https://github.com/ambv/black
    rev: 22.3.0
    hooks:
      - id: black
        args:
          - --safe

  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.2.2 # 6.2.3 is slightly broken
    hooks:
      - id: pydocstyle
        args:
          - --convention=pep257
          # Additional ignore reasons:
          # D1xx: we do not want to force contributors to write redundant or useless docstrings
          # D202: additional whitespace helps with readability
          # D205: we don't want to always require a single line summary
          # D211: same as D202
          # D400: first line doesn't need to end in a period
          # See the following documentation for what each rule does:
          # https://www.pydocstyle.org/en/6.2.3/error_codes.html#error-codes
          - --add-ignore=D1,D202,D205,D211,D400

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.15.0
    hooks:
      - id: eslint
        files: \.(js|ts|vue)$
        exclude: ^utilities/load_testing/.*|frontend/(nuxt-template-overrides/.*|.remake/.*)$ # ESLint raises warnings for ignored files.
        "types": [file] # ESLint only accepts [javascript] by default.
        args:
          - --ignore-path=.gitignore
          - --ignore-path=.eslintignore
          - --max-warnings=0
        additional_dependencies:
          - eslint@8.28.0
          - eslint-config-prettier@8.6.0
          - "@babel/eslint-parser@7.19.1"
          - "@intlify/eslint-plugin-vue-i18n@1.4.0"
          - "@nuxtjs/eslint-module@3.1.0"
          - "@typescript-eslint/eslint-plugin@5.44.0"
          - "@typescript-eslint/parser@5.44.0"
          - eslint-import-resolver-custom-alias@1.3.0
          - eslint-plugin-eslint-comments@3.2.0
          - eslint-plugin-import@2.27.5
          - eslint-plugin-prettier@4.2.1
          - eslint-plugin-tsdoc@0.2.17
          - eslint-plugin-unicorn@42.0.0
          - eslint-plugin-vue@9.9.0
          - eslint-plugin-vuejs-accessibility@1.1.1

  # Use the `.prettierignore` and `.prettier.config.js` files to configure project-specific requirements.
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.6.0
    hooks:
      - id: prettier
        additional_dependencies:
          - prettier@2.6.0
          - prettier-plugin-tailwindcss@0.2.2
          - typescript@4.9.3

  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.8.0
    hooks:
      - id: shellcheck

  - repo: local # More local hooks are defined at the top.
    hooks:
      - id: types
        name: types
        files: ^frontend/.*$
        entry: bash -c 'pnpm exec vue-tsc -p frontend --noEmit'
        language: system
        pass_filenames: false
      - id: test:unit
        name: test:unit
        files: ^frontend/.*$
        entry: bash -c 'just frontend/run test:unit'
        language: system
        pass_filenames: false
        stages:
          - push
      - id: render-precommit
        name: render-precommit
        files: ^templates/.*$
        entry: bash -c 'just automations/js/render-precommit'
        language: system
        pass_filenames: false
      - id: render-prettier
        name: render-prettier
        files: ^templates/.*$
        entry: bash -c 'just automations/js/render-prettier'
        language: system
        pass_filenames: false
      - id: render-github
        name: render-github
        files: ^templates/.*$
        entry: bash -c 'just automations/js/render-github'
        language: system
        pass_filenames: false
      - id: render-release-drafter
        name: render-release-drafter
        files: ^templates/.*$
        entry: bash -c 'just automations/js/render-release-drafter'
        language: system
        pass_filenames: false
