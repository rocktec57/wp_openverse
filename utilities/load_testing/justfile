set dotenv-load := true

COLOR := "\\033[0;32m"
NO_COLOR := "\\033[0m"

# Show all available recipes
@_default:
    printf "\n{{ COLOR }}# Load testing (path: \`api/\`)\n"
    printf "============================={{ NO_COLOR }}\n"
    just --list --unsorted

DOCKER_HOST := if os() == "macos" { "host.docker.internal" } else { "172.17.0.1" }

build:
    docker build . -t openverse-load_testing:latest

run script host: build
    docker run --rm -it -v {{ invocation_directory() }}:/app openverse-load-testing:latest ./{{ script }}.sh {{ host }}

api host=("http://" + DOCKER_HOST + ":50280"):
    @just run api {{ host }}

# Run the specified script in a load testing container
k6 script="main.js" +extra_args="": build
    docker run \
      --rm \
      ${ACCESS_TOKEN:+ --env ACCESS_TOKEN=$ACCESS_TOKEN} \
      ${API_URL:+ --env API_URL=$API_URL} \
      ${FRONTEND_URL:+ --env FRONTEND_URL=$FRONTEND_URL} \
      --volume {{ invocation_directory() }}/k6:/app \
      {{ extra_args }} \
      openverse-load_testing:latest \
      run {{ script }}


# Run the frontend script for one of the scenarios (static-en, static-locales, search-en, search-locales, all)
k6-frontend scenarios="static-en":
    @just k6 frontend.js --env SCENARIOS={{scenarios}}
