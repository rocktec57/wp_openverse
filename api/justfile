set dotenv-load := false

# Show all available recipes
@_default:
  echo "#######"
  echo "# API #"
  echo "#######"
  just --list --unsorted


# Aliases _all-up from the parent directory
# https://github.com/casey/just/issues/1550
_all-up:
    just ../_all-up

# Install dependencies
install:
  pipenv install --dev

##########
# Health #
##########

# Check the health of the service
@health host="localhost:50280":
    -curl -s -o /dev/null -w '%{http_code}' 'http://{{ host }}/healthcheck/'

# Wait for the service to be healthy
@wait host="localhost:50280":
    # The just command on the second line is executed in the context of the
    # parent directory and so must be prefixed with `api/`.
    just ../_loop \
    '"$(just api/health {{ host }})" != "200"' \
    "Waiting for the API to be healthy..."

########
# cURL #
########

# Make a cURL GET request to service at the given path
_curl-get path host="localhost:50280":
    curl "http://{{ host }}/v1/{{ path }}"

# Make a test cURL GET request to the API
stats media="images" host="localhost:50280":
    just _curl-get "{{ media }}/stats/" {{ host }}

# Launch a `pgcli` shell in the web container (requires typing credentials)
pgcli db_host="db" db_name="openledger" db_user="deploy":
    just ../exec web pgcli -h {{ db_host }} openledger

#########################
# Django administration #
#########################

# Run Django administrative commands locally
dj-local +args="":
    pipenv run python manage.py {{ args }}

# Run Django administrative commands inside the Docker container
dj +args="": _all-up
    just ../exec web python manage.py {{ args }}

# Get IPython shell inside the Docker container
ipython:
    just dj shell

# Get DB shell inside the Docker container
dbshell:
    just dj dbshell

# Run `collectstatic` to prepare for building the `nginx` Dockerfile target.
collectstatic:
    # The STATIC_ROOT environment variable is relative to the Django container's
    # default working directory i.e. the `/api/` directory. The resulting output
    # will be `/api/static/`, which is ignored by Git for convenience.
    STATIC_ROOT="./static" just dj collectstatic --noinput

#########
# Tests #
#########

# Run API tests inside the Docker container
test *args: _all-up
    just ../exec web ./test/run_test.sh {{ args }}

# Run API tests locally
test-local *args:
    pipenv run ./test/run_test.sh {{ args }}

# Run smoke test for the API docs
doc-test: _all-up
    curl --fail 'http://localhost:50280/v1/?format=openapi'

##########
# Sphinx #
##########

# Compile Sphinx documentation into HTML output
sphinx-make: _all-up
    just ../exec web sphinx-build -M html docs/ build/

# Serve Sphinx documentation via a live-reload server
sphinx-live: _all-up
    just ../exec web sphinx-autobuild --host 0.0.0.0 --port 3000 docs/ build/html/

# Serve the Sphinx documentation from the HTML output directory
sphinx-serve dir="api" port="50231":
    cd {{ dir }}/build/html && pipenv run python -m http.server {{ port }}
