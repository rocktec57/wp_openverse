from rest_framework import serializers
from rest_framework.serializers import ModelSerializer
from cccatalog.api.models import Image
from cccatalog.api.serializers.search_serializers import ImageSerializer


class ImageDetailTagSerializer(serializers.Serializer):
    name = serializers.CharField(
        required=False,
        help_text="The name of a detailed tag."
    )
    accuracy = serializers.FloatField(
        required=False,
        help_text="The accuracy of a machine-generated tag. Human-generated "
                  "tags do not have an accuracy field."
    )
    provider = serializers.CharField(
        required=False,
        help_text="The source of a tag. Usually, it matches the provider of "
                  "the image, but it can also be generated by a third party."
    )


class ImageDetailSerializer(ModelSerializer, ImageSerializer):
    """
    A single image with some additional fields, such as view count. Unlike
    ImageSerializer, the detail view comes from the database rather than
    Elasticsearch.
    """
    view_count = serializers.IntegerField(
        required=False,
        help_text="The number of times that an image has been viewed. "
    )
    attribution = serializers.CharField(
        required=True,
        help_text="The Creative Commons attribution of the work. Use this to "
                  "give credit to creators to their works and fulfill "
                  "legal attribution requirements."
    )
    license_url = serializers.URLField(
        required=True,
        help_text="The URL leading to the license associated with the work."
    )
    tags = ImageDetailTagSerializer(
        many=True,
        help_text="Tags with detailed metadata, such as accuracy and provider."
    )
    id = serializers.CharField(
        help_text="The unique ID of an image.",
        source='identifier'
    )
    provider_url = serializers.CharField(
        help_text="The homepage of the image provider.",
        allow_blank=True,
        allow_null=True
    )

    class Meta:
        model = Image
        fields = ('title', 'id', 'creator', 'creator_url', 'tags',
                  'url', 'thumbnail', 'provider', 'source', 'license',
                  'license_version', 'foreign_landing_url', 'meta_data',
                  'view_count', 'provider_url', 'license_url', 'attribution')


class WatermarkQueryStringSerializer(serializers.Serializer):
    embed_metadata = serializers.BooleanField(
        help_text="Whether to embed ccREL metadata via XMP.",
        default=True
    )
    watermark = serializers.BooleanField(
        help_text="Whether to draw a frame around the image with attribution"
                  " text at the bottom.",
        default=True
    )
